--- enscript-1.6.2.orig/compat/regex.c
+++ enscript-1.6.2/compat/regex.c
@@ -2400,11 +2400,13 @@
             case ')':
               if (syntax & RE_NO_BK_PARENS) goto normal_backslash;
 
-              if (COMPILE_STACK_EMPTY)
-                if (syntax & RE_UNMATCHED_RIGHT_PAREN_ORD)
+              if (COMPILE_STACK_EMPTY) {
+                if (syntax & RE_UNMATCHED_RIGHT_PAREN_ORD) {
                   goto normal_backslash;
-                else
+		} else {
                   FREE_STACK_RETURN (REG_ERPAREN);
+		}  
+	      }	
 
             handle_close:
               if (fixup_alt_jump)
@@ -2420,11 +2422,13 @@
                 }
 
               /* See similar code for backslashed left paren above.  */
-              if (COMPILE_STACK_EMPTY)
-                if (syntax & RE_UNMATCHED_RIGHT_PAREN_ORD)
+              if (COMPILE_STACK_EMPTY) {
+                if (syntax & RE_UNMATCHED_RIGHT_PAREN_ORD) {
                   goto normal_char;
-                else
+		} else {
                   FREE_STACK_RETURN (REG_ERPAREN);
+		}
+	      }	
 
               /* Since we just checked for an empty stack above, this
                  ``can't happen''.  */
--- enscript-1.6.2.orig/lib/enscript.cfg.in
+++ enscript-1.6.2/lib/enscript.cfg.in
@@ -48,7 +48,7 @@
 DefaultFancyHeader: enscript
 
 # Default output media.
-DefaultMedia: @media@
+# DefaultMedia: @media@
 
 # Where output goes as a default: `printer' or `stdout'
 DefaultOutputMethod: printer
@@ -91,6 +91,11 @@
 Media:	A5		420	595	24	24	396	571
 Media:	Legal		612	1008	24	24	588	984
 Media:  Letter		612	792	38	24	574	768
+Media:	a3		842	1190	24	24	818	1166
+Media:	a4		595	842	24	24	571	818
+Media:	a5		420	595	24	24	396	571
+Media:	legal		612	1008	24	24	588	984
+Media:  letter		612	792	38	24	574	768
 
 # HP DeskJet media (DeskJet can't print on the bottom 1/2" of the paper).
 Media:	A4dj		595	842	24	50	571	818
--- enscript-1.6.2.orig/src/psgen.c
+++ enscript-1.6.2/src/psgen.c
@@ -2472,7 +2472,7 @@
 read_float (InputStream *is, int units, int horizontal)
 {
   char buf[256];
-  int i, ch;
+  int i, ch = 0;
   double val;
 
   for (i = 0; (i < sizeof (buf) - 1
